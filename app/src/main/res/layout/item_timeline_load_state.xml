<?xml version="1.0" encoding="utf-8"?><!-- 타임라인을 스크롤할 때 데이터를 불러오는 경계에서 스크롤이 멈추는 것을 볼 수 있습니다. -->
<!-- Paging3는 사용자의 스크롤이 끊기지 않도록 화면에 보이는 영역 밖에 있는 데이터도 미리 불러오지만, -->
<!-- 로딩이 길어지면 더 이상 스크롤을 할 수 없기 때문에 발생하는 문제입니다. -->
<!-- 더 이상 불러올 데이터가 없는지 불러오는 중인지 알 수 있게 [그림 8-4]처럼 로딩중이라는 상태를 사용자가 알 수 있게 표시해야 합니다. -->
<!-- Paging3는 로딩 상태를 표시하기 위해 어댑터에 뷰 타입을 추가하는 방식이 아니라 -->
<!-- 아이템을 제공하는 어댑터와 로딩 상태를 표시하는 어댑터를 연결해 ConcatAdapter를 만드는 방법을 사용합니다. -->
<!-- 이제 [코드 8-10]을 보고 프로그래스바와 재시도 버튼을 갖는 레이아웃을 만듭니다. -->
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content">

    <ProgressBar
        android:id="@+id/progress"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintBaseline_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <com.google.android.material.button.MaterialButton
        android:id="@+id/retry"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/retry"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>